name: $(Build.DefinitionName)-$(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
    - master
    - releases/*
    - hotfix/*

jobs:
- job: TestAndAnalyse
  pool:
    vmImage: 'macOS 10.13'

  steps:
  - template: testandanalyse.yml


- job: CheckEnvironmentInBranchName
  pool:
    vmImage: 'macOS 10.13'
  steps:
  - task: Gradle@2
    env:
      ENVIRONMENT_FILTER: $(ENVIRONMENT_FILTER)
      BRANCH_NAME: $(Build.SourceBranch)
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      tasks: 'shouldBuildForBranch -Penvironment=$(ENVIRONMENT_FILTER)'
  dependsOn: TestAndAnalyse
  condition: succeeded()

- job: BuildArtifacts
  pool:
    vmImage: 'macOS 10.13'
  steps:
  - task: Gradle@2
    env:
      KEYSTORE_PASSWORD: $(KEYSTORE_PASSWORD)
      KEY_PASSWORD: $(KEY_PASSWORD)
      ENVIRONMENT_FILTER: $(ENVIRONMENT_FILTER)
      BUILD_TYPE_FILTER: $(BUILD_TYPE_FILTER)
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      tasks: 'configureMappingArtifacts configureApkArtifacts -Penvironment=$(ENVIRONMENT_FILTER) -Pbuildtype=$(BUILD_TYPE_FILTER)'

  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'

  - task: CopyFiles@2
    inputs:
      contents: '**/mapping-*.txt'
      targetFolder: '$(build.artifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(build.artifactStagingDirectory)'
      artifactName: 'BuildArtifacts'
  dependsOn: CheckEnvironmentInBranchName
  condition: succeeded()

