name: $(Build.DefinitionName)-$(SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
    - master
    - releases/*
    - hotfix/*
    - feature/*

jobs:
- job: TestAndAnalyse
  pool:
    vmImage: 'macOS 10.13'

  steps:
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      tasks: 'cleanAndInit'

#  - task: Gradle@2
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      publishJUnitResults: false
#      tasks: 'assembleAppForCI'
#
#  - task: Gradle@2
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      publishJUnitResults: true
#      testResultsFiles: '**/TEST-*.xml'
#      tasks: 'runUnitTests'
#
#  - task: Gradle@2
#    env:
#      ANDROID_SONAR_LOGIN: $(ANDROID_SONAR_LOGIN)
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      tasks: 'sonarqube'
#    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#
#  - task: Gradle@2
#    env:
#      ANDROID_SONAR_LOGIN: $(ANDROID_SONAR_LOGIN)
#      AZURE_BRANCH: $(Build.SourceBranchName)
#      GITHUB_SONAR_OAUTH: $(GITHUB_SONAR_OAUTH)
#    inputs:
#      workingDirectory: ''
#      gradleWrapperFile: 'gradlew'
#      gradleOptions: '-Xmx3072m'
#      tasks: 'sonarqube -Dsonar.analysis.mode=preview -Dsonar.github.pullRequest=$(System.PullRequest.PullRequestNumber) -Dsonar.github.repository=TamasAYM/AndroidPublishingTest -Dsonar.github.oauth=$(GITHUB_SONAR_OAUTH)'
#    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
#
#  - task: CopyFiles@2
#    inputs:
#      contents: 'app/build/reports/**/*.*'
#      targetFolder: '$(build.artifactStagingDirectory)'
#
#  - task: PublishBuildArtifacts@1
#    inputs:
#      pathToPublish: '$(build.artifactStagingDirectory)'
#      artifactName: 'Reports'


- job: BuildArtifacts
  pool:
    vmImage: 'macOS 10.13'
  steps:
  - task: Gradle@2
    env:
      KEYSTORE_PASSWORD: $(KEYSTORE_PASSWORD)
      KEY_PASSWORD: $(KEY_PASSWORD)
      ENVIRONMENT_FILTER: $(ENVIRONMENT_FILTER)
      BUILD_TYPE_FILTER: $(BUILD_TYPE_FILTER)
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      tasks: 'configureMappingArtifacts configureApkArtifacts -Penvironment=$(ENVIRONMENT_FILTER) -Pbuildtype=$(BUILD_TYPE_FILTER)'

  - task: CopyFiles@2
    inputs:
      contents: '**/*.apk'
      targetFolder: '$(build.artifactStagingDirectory)'

  - task: CopyFiles@2
    inputs:
      contents: '**/mapping-*.txt'
      targetFolder: '$(build.artifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(build.artifactStagingDirectory)'
      artifactName: 'BuildArtifacts'
  dependsOn: TestAndAnalyse
  condition: and(succeeded(), or(contains(variables['Build.SourceBranch'], 'master'), contains(variables['Build.SourceBranch'], 'releases'), contains(variables['Build.SourceBranch'], 'hotfix')))

